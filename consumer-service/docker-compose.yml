version: "3.8"
services:
  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - rabbitmq_network

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: testdb
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
      timeout: 5s
    networks:
      - rabbitmq_network

  consumer-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: consumer-service
    ports:
      - "8081:8081"
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/  # ✅ Use shared RabbitMQ
      - REDIS_ADDRESS=redis:6379
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DBNAME=testdb
    networks:
      - rabbitmq_network

volumes:
  pg_data:

networks:
  rabbitmq_network:
    external: true  # ✅ Use the pre-created external network
